<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Poc on StarpTech</title>
    <link>/tags/poc/</link>
    <description>Recent content in Poc on StarpTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/poc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An example microservice system using Hemera and best of today</title>
      <link>/post/2017/01/23/aither/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/01/23/aither/</guid>
      <description>aither Aither shows an approach how to bootstrap a microservice system with Hemera and docker. You can scale your worker in seconds and because we use NATS as â€œnervous system&amp;rdquo; for our distributed system we do not have to carry about service-discovery or load-balancing of hemera-services. We use traefik to load-balancing the api-gateway.
This configuration will setup:
 Hapi http server which act as api-gataway to the Hemera services. Microservice example which is responsible to add two numbers.</description>
    </item>
    
  </channel>
</rss>