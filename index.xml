<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on StarpTech</title>
    <link>/</link>
    <description>Recent content in Home on StarpTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Standard formatting in Javascript</title>
      <link>/post/2017/06/03/standard-formatting-in-javascript/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/06/03/standard-formatting-in-javascript/</guid>
      <description>Formatting in Javascript must not be pain. You don&amp;rsquo;t have to use any linting configurations files. No .eslintrc, .jshintrc, or .jscsrc files to manage. Beside linting it also warns you about programmer errors early e.g unused variables, unhandled errors and more. Give StandardJs a try!
Installation npm install standard --save-dev  Editor support  vscode-standardjs vscode-standardjs-snippets  Other editors
Using  Format your code with standard Fix code with standard -fix  Examples Simple integration in your build scripts.</description>
    </item>
    
    <item>
      <title>An example microservice system using Hemera and best of today</title>
      <link>/post/2017/01/23/aither/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/01/23/aither/</guid>
      <description>aither Aither shows an approach how to bootstrap a microservice system with Hemera and docker. You can scale your worker in seconds and because we use NATS as â€œnervous system&amp;rdquo; for our distributed system we do not have to carry about service-discovery or load-balancing of hemera-services. We use traefik to load-balancing the api-gateway.
This configuration will setup:
 Hapi http server which act as api-gataway to the Hemera services. Microservice example which is responsible to add two numbers.</description>
    </item>
    
    <item>
      <title>Hemera - A Node.js microservices toolkit for NATS</title>
      <link>/post/2016/11/25/hemera/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/11/25/hemera/</guid>
      <description>Hemera is a small wrapper around the NATS driver. NATS is a simple, fast and reliable solution for the internal communication of a distributed system. It chooses simplicity and reliability over guaranteed delivery. We want to provide a toolkit to develop micro services in an easy and powerful way. We use bloom filters to provide a pattern matching RPC style. You don&amp;rsquo;t have to worry about the transport. NATS is powerful.</description>
    </item>
    
    <item>
      <title>The classic developer nowadays ...</title>
      <link>/post/2016/07/10/the-classic-developer-nowadays/</link>
      <pubDate>Sun, 10 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/07/10/the-classic-developer-nowadays/</guid>
      <description>You use Javascript with a powerful framework like Angular or React to implement a great user experience. Perhaps you want to get the most of the line and use babel. You love automatism and create your own build pipeline with gulp or grunt. You are hungry for a REST API to play with data in your application. Your API is build with proven software like NodeJs, .NET Core or Spring.</description>
    </item>
    
  </channel>
</rss>